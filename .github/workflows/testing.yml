name: Testing

on:
  push:
    branches: [master]
  pull_request:
    branches: [master]
  release:
    types: [published]
  workflow_dispatch:
    inputs:
      task:
        type: choice
        options: [tests, release]
        default: tests
        description: Only run tests or release a new version to PyPI after tests pass.

jobs:
  pytest:
    strategy:
      max-parallel: 20
      matrix:
        python-version: ["3.9", "3.10"]

    runs-on: ubuntu-latest
    env:
      PROTOCOL_BUFFERS_PYTHON_IMPLEMENTATION: "python"

    steps:
      - uses: actions/checkout@v3
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}
          cache: pip
          cache-dependency-path: '**/requirements.txt'
      - name: Install dependencies
        run: |
          pip install --quiet -r requirements.txt -r requirements-ci.txt
          pip install -e .
      - name: pytest
        run: |
          pytest --cov=matgl tests --color=yes
      - name: Coveralls
        uses: coverallsapp/github-action@v2

  build_sdist:
    needs: pytest
    if: github.event_name == 'release' || (github.event_name == 'workflow_dispatch' && inputs.task == 'release')
    name: Build source distribution
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-python@v4
        name: Install Python
        with:
          python-version: "3.11"
      - run: python -m pip install build
      - name: Build sdist
        run: python -m build --sdist
      - uses: actions/upload-artifact@v3
        with:
          path: dist/*.tar.gz

  build_wheels:
    name: Build wheels
    needs: pytest
    if: github.event_name == 'release' || (github.event_name == 'workflow_dispatch' && inputs.task == 'release')
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Build wheels
        uses: pypa/cibuildwheel@v2.12.3
        with:
          python-version: "3.11"
        env:
          CIBW_BUILD: cp${{ matrix.python-version }}-*
      - name: Save artifact
        uses: actions/upload-artifact@v3
        with:
          path: ./wheelhouse/*.whl

  release:
    needs: [build_wheels, build_sdist]
    if: github.event_name == 'release' || (github.event_name == 'workflow_dispatch' && inputs.task == 'release')
    runs-on: ubuntu-latest
    permissions:
      # For pypi trusted publishing
      id-token: write
    steps:
      - name: Set up Python 3.11
        uses: actions/setup-python@v4
        with:
          python-version: 3.11
      - name: Get build artifacts
        uses: actions/download-artifact@v3
        with:
          name: artifact
          path: dist
      - name: Publish to PyPi
        uses: pypa/gh-action-pypi-publish@release/v1
        with:
          skip-existing: true
          verbose: true
